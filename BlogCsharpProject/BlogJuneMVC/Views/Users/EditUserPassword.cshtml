@model BlogJuneMVC.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
}

<h2>@ViewBag.Title.</h2>
@using (Html.BeginForm("EditUserPassword", "Users", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="alert alert-warning">
        <h4><strong>Warning!</strong> You are about to change this user password. Are you sure ?</h4>
    </div>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
   
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-warning" />
            <a class="btn btn-default" href="@Url.Action("Index", "Users")">Back to List</a>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))*@

@*@Html.HiddenFor(model => model.Code)
    @Html.HiddenFor(model => model.Email)*@
@*<div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>*@





@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@